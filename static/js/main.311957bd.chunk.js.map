{"version":3,"sources":["scripts/timers.js","scripts/pipes.js","scripts/animations.js","scripts/controls.js","scripts/gamestate.js","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["gravityTimer","birdHeightTimer","newPipesTimer","collisionTimer","scoreTimer","clearGravityTimer","clearInterval","setGravityTimer","setInterval","applyGravity","setNewPipesTimer","scaleFactor","window","visualViewport","width","upperPipe","document","createElement","classList","add","lowerPipe","initialHeight","style","height","Math","random","split","background","backgroundRepeat","backgroundSize","transition","gameArena","getElementsByClassName","appendChild","right","setTimeout","remove","generatePipes","flappyBird","getBoundingClientRect","top","pressed","onPress","jump","onRelease","score","startGame","display","visibility","flappybird","src","left","bottom","endGame","addEventListener","pipes","i","length","pipe","x","y","incrementScore","innerHTML","removeEventListener","clearAllPipes","Home","className","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.311957bd.chunk.js","sourcesContent":["import { applyGravity } from \"./animations\";\nimport { endGame, incrementScore } from \"./gamestate\";\nimport { generatePipes } from \"./pipes\";\n\nlet gravityTimer;\nlet birdHeightTimer;\nlet newPipesTimer;\nlet collisionTimer;\nlet scoreTimer;\n\nexport const clearGravityTimer = () => {\n  clearInterval(gravityTimer);\n};\nexport const setGravityTimer = () => {\n  gravityTimer = setInterval(() => {\n    applyGravity();\n  }, 50);\n};\nexport const clearBirdHeightDetector = () => {\n  clearInterval(birdHeightTimer);\n};\nexport const setBirdHeightDetector = () => {\n  birdHeightTimer = setInterval(() => {\n    let flappyBird = document.getElementsByClassName(\"flappy-bird\")[0];\n    if (\n      flappyBird.getBoundingClientRect().bottom >= window.visualViewport.height\n    ) {\n      endGame();\n    }\n  }, 50);\n};\n\nexport const clearNewPipesTimer = () => {\n  clearInterval(newPipesTimer);\n};\nexport const setNewPipesTimer = () => {\n  let scaleFactor = 1;\n  if(window.visualViewport.width < 800){\n    scaleFactor = 4;\n  }\n  newPipesTimer = setInterval(() => {\n    generatePipes();\n  }, scaleFactor*1500*((window.visualViewport.width)/1920));\n};\nexport const clearDetectCollisionTimer = () => {\n  clearInterval(collisionTimer);\n};\nexport const setDetectCollisionTimer = () => {\n  collisionTimer = setInterval(() => {\n    let flappyBird = document.getElementsByClassName(\"flappy-bird\")[0];\n    let pipes = document.getElementsByClassName(\"pipe\");\n\n    for (let i = 0; i < pipes.length; i++) {\n      let pipe = pipes[i];\n      if (\n        flappyBird.getBoundingClientRect().x <\n          pipe.getBoundingClientRect().x + pipe.getBoundingClientRect().width &&\n        flappyBird.getBoundingClientRect().x +\n          flappyBird.getBoundingClientRect().width >\n          pipe.getBoundingClientRect().x &&\n        flappyBird.getBoundingClientRect().y <\n          pipe.getBoundingClientRect().y +\n            pipe.getBoundingClientRect().height &&\n        flappyBird.getBoundingClientRect().y +\n          flappyBird.getBoundingClientRect().height >\n          pipe.getBoundingClientRect().y\n      ) {\n        endGame();\n      }\n    }\n  }, 100);\n};\nexport const clearScoreTimer = () => {\n  clearInterval(scoreTimer);\n};\nexport const setScoreTimer = () => {\n  scoreTimer = setInterval(() => {\n    let flappyBird = document.getElementsByClassName(\"flappy-bird\")[0];\n    let pipes = document.getElementsByClassName(\"pipe\");\n    for (let i = 0; i < pipes.length; i++) {\n      let pipe = pipes[i];\n      if (\n        pipe.getBoundingClientRect().left <\n        flappyBird.getBoundingClientRect().left && \n        pipe.getBoundingClientRect().right <\n        flappyBird.getBoundingClientRect().right\n      ) {\n        incrementScore();\n        return;\n      }\n    }\n  },1500);\n};\n","export const generatePipes = () => {\n  let upperPipe = document.createElement(\"div\");\n  upperPipe.classList.add(\"pipe\");\n  upperPipe.classList.add(\"upper\");\n\n  let lowerPipe = document.createElement(\"div\");\n  lowerPipe.classList.add(\"pipe\");\n  lowerPipe.classList.add(\"lower\");\n  let initialHeight = 200;\n  if (window.visualViewport.width < 800) {\n    initialHeight = 50;\n  }\n  upperPipe.style.height = initialHeight + Math.random() * 300 + \"px\";\n  lowerPipe.style.height =\n    window.visualViewport.height -\n    upperPipe.style.height.split(\"p\")[0] -\n    300 +\n    \"px\";\n  lowerPipe.style.background = `url(\"./pipe.png\")`;\n  upperPipe.style.background = `url(\"./pipeupper.png\")`;\n\n  lowerPipe.style.backgroundRepeat = \"no-repeat\";\n  lowerPipe.style.backgroundSize = \"100% 100%\";\n\n  upperPipe.style.backgroundRepeat = \"no-repeat\";\n  upperPipe.style.backgroundSize = \"100% 100%\";\n  let scaleFactor = 1;\n  if (window.visualViewport.width < 800) {\n    scaleFactor = 2;\n  }\n  upperPipe.style.transition =\n    scaleFactor * 5000 * (window.visualViewport.width / 1920) + \"ms linear\";\n  lowerPipe.style.transition =\n    scaleFactor * 5000 * (window.visualViewport.width / 1920) + \"ms linear\";\n\n  let gameArena = document.getElementsByClassName(\"game-arena\")[0];\n  gameArena.appendChild(upperPipe);\n  gameArena.appendChild(lowerPipe);\n\n  upperPipe.style.right = 100 + window.visualViewport.width + \"px\";\n  lowerPipe.style.right = 100 + window.visualViewport.width + \"px\";\n  setTimeout(() => {\n    upperPipe.remove();\n    lowerPipe.remove();\n  }, 5500);\n};\n\nexport const clearAllPipes = () => {\n  let pipes = document.getElementsByClassName(\"pipe\");\n  pipes = [...pipes];\n  for (let i = 0; i < pipes.length; i++) {\n    pipes[i].remove();\n  }\n};\n","import { clearGravityTimer, setGravityTimer } from \"./timers\";\n\nexport const applyGravity = () => {\n  let flappyBird = document.getElementsByClassName(\"flappy-bird\")[0];\n  if (\n    flappyBird &&\n    flappyBird.getBoundingClientRect().top < window.visualViewport.height\n  ) {\n    flappyBird.style.top = flappyBird.getBoundingClientRect().top + 30 + \"px\";\n  }\n};\n\nexport const jump = () => {\n  let flappyBird = document.getElementsByClassName(\"flappy-bird\")[0];\n  if (flappyBird.getBoundingClientRect().top > 150) {\n    clearGravityTimer();\n    flappyBird.style.top = flappyBird.getBoundingClientRect().top - 100 + \"px\";\n    flappyBird = document.getElementsByClassName(\"flappy-bird\")[0];\n    if (flappyBird) {\n      setTimeout(setGravityTimer, 50);\n    }\n  }\n};\n\nexport const animatePipes = () => {};\n","import { jump } from \"./animations\";\n\nlet pressed = false;\n\nexport const addJumpEventListener = () => {\n  document.addEventListener(\"mousedown\", onPress);\n  document.addEventListener(\"mouseup\", onRelease);   \n};\nexport const clearJumpEventListener = () => {\n  document.removeEventListener(\"mousedown\", onPress);\n  document.removeEventListener(\"mouseup\", onRelease);\n};\n\nconst onPress = () => {\n  if (pressed === false) {\n    jump();\n    pressed = true;\n  }\n};\nconst onRelease = () => {\n  if (pressed === true) {\n    pressed = false;\n  }\n};\n","import { addJumpEventListener, clearJumpEventListener } from \"./controls\";\nimport { clearAllPipes } from \"./pipes\";\nimport {\n  clearBirdHeightDetector,\n  clearDetectCollisionTimer,\n  clearGravityTimer,\n  clearNewPipesTimer,\n  clearScoreTimer,\n  setBirdHeightDetector,\n  setDetectCollisionTimer,\n  setGravityTimer,\n  setNewPipesTimer,\n  setScoreTimer,\n} from \"./timers\";\nlet score = 0;\nexport const startGame = () => {\n  clearGravityTimer();\n  document.getElementsByClassName(\"main-menu\")[0].style.display = \"none\";\n  document.getElementsByClassName(\"score\")[0].style.visibility = \"visible\";\n  let flappybird = document.createElement(\"img\");\n  flappybird.src = \"./flappybird.png\";\n  flappybird.classList.add(\"flappy-bird\");\n  if (window.visualViewport.width < 800) {\n    flappybird.style.left = \"20px\";\n  }\n  let gameArena = document.getElementsByClassName(\"game-arena\")[0];\n  gameArena.appendChild(flappybird);\n  setGravityTimer();\n  setBirdHeightDetector();\n  addJumpEventListener();\n  setNewPipesTimer();\n  setDetectCollisionTimer();\n  setScoreTimer();\n};\n\nexport const endGame = () => {\n  document.getElementsByClassName(\"game-over\")[0].style.display = \"block\";\n  document.getElementsByClassName(\"final-score\")[0].innerHTML =\n    \"Final Score: \" + score;\n  document.getElementsByClassName(\"score\")[0].style.visibility = \"hidden\";\n  let flappyBird = document.getElementsByClassName(\"flappy-bird\")[0];\n  flappyBird.remove();\n  clearGravityTimer();\n  clearJumpEventListener();\n  clearBirdHeightDetector();\n  clearNewPipesTimer();\n  clearAllPipes();\n  clearDetectCollisionTimer();\n  clearScoreTimer();\n  score = 0;\n  document.getElementsByClassName(\"score\")[0].innerHTML = \"Score: \" + score;\n};\n\nexport const mainMenu = () => {\n  document.getElementsByClassName(\"game-over\")[0].style.display = \"none\";\n  document.getElementsByClassName(\"main-menu\")[0].style.display = \"block\";\n}\n\nexport const incrementScore = () => {\n  score += 1;\n  document.getElementsByClassName(\"score\")[0].innerHTML = \"Score: \" + score;\n};","import React from \"react\";\nimport { startGame, mainMenu } from \"../scripts/gamestate\";\nimport \"./home.css\";\nconst Home = () => {\n  return (\n    <>\n      <div className=\"game-arena\">\n        <div className=\"main-menu\">\n          <h1>Flappy Bird</h1>\n          <h2>left click or tap to jump!</h2>\n          <h2>dodge the pipes to get points</h2>\n          <button\n            onClick={() => {\n              startGame();\n            }}\n          >\n            Start Game\n          </button>\n        </div>\n        <h1 className=\"score\">Score: 0</h1>\n        <div className=\"game-over\">\n          <h1>Game Over</h1>\n          <h2 className=\"final-score\">Final Score: 0</h2>\n          <button\n            onClick={() => {\n              mainMenu();\n            }}\n          >\n            Main Menu\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import './App.css';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}